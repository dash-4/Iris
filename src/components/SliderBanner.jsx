import React, { useState, useEffect } from 'react';

// –ò–º–∏—Ç–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
const SLIDER_DATA = [
  {
    title: "–ü—Ä–æ–µ–∫—Ç–∏—Ä—É–µ–º –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∫–æ–Ω–≤–µ–π–µ—Ä—ã ¬´–ø–æ–¥ –∫–ª—é—á¬ª",
    subtitle: "–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞.",
    ctaText: "–ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—á–µ—Ç –ø—Ä–æ–µ–∫—Ç–∞",
  },
  {
    title: "–£–≤–µ–ª–∏—á—å—Ç–µ –ø—Ä–æ–ø—É—Å–∫–Ω—É—é —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –¥–æ 30%",
    subtitle: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –Ω–∞–¥–µ–∂–Ω—ã—Ö –∫–æ–Ω–≤–µ–π–µ—Ä–Ω—ã—Ö —Å–∏—Å—Ç–µ–º —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π 24 –º–µ—Å—è—Ü–∞.",
    ctaText: "–ó–∞–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –∏–Ω–∂–µ–Ω–µ—Ä–∞",
  },
];

const ADVANTAGES_DATA = [
  {
    icon: "‚è±",
    title: "–°—Ä–æ–∫ –æ—Ç –ø—Ä–æ–µ–∫—Ç–∞ –¥–æ –∑–∞–ø—É—Å–∫–∞ ‚Äì 30 –¥–Ω–µ–π",
    description: "–ë—ã—Å—Ç—Ä–æ–µ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –¥–ª—è –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç–æ–µ–≤.",
  },
  {
    icon: "üõ†",
    title: "–ì–∞—Ä–∞–Ω—Ç–∏—è 24 –º–µ—Å—è—Ü–∞",
    description: "–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏.",
  },
  {
    icon: "üè≠",
    title: "–°–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ",
    description: "–ü–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞ –æ—Ç —á–µ—Ä—Ç–µ–∂–∞ –¥–æ –≥–æ—Ç–æ–≤–æ–≥–æ –∫–æ–Ω–≤–µ–π–µ—Ä–∞.",
  },
];

// –°—Ç–∏–ª–∏
const CONTAINER_CLASSES = "container mx-auto px-4";
const CTA_BUTTON_CLASSES = "bg-orange-500 hover:bg-orange-600 text-white font-bold py-3 md:py-4 px-8 md:px-10 rounded-lg uppercase tracking-widest transition duration-300 transform hover:scale-[1.02] shadow-2xl";

const SliderBanner = () => {
  const [currentSlide, setCurrentSlide] = useState(0);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–º–µ–Ω–∞ —Å–ª–∞–π–¥–æ–≤
  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentSlide((prev) => (prev + 1) % SLIDER_DATA.length);
    }, 5000); // –°–º–µ–Ω–∞ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
    return () => clearInterval(interval);
  }, []);

  const handleDotClick = (index) => {
    setCurrentSlide(index);
  };

  const slide = SLIDER_DATA[currentSlide];

  return (
    <>
      <section className="relative h-[80vh] flex items-center justify-center overflow-hidden bg-gray-900 text-white border-b-4 border-orange-500/50">
        {/* –§–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ */}
        <div
          className="absolute inset-0 bg-black/60 z-0"
          style={{
            backgroundImage: `url('/images/hero-bg-default.jpg')`,
            backgroundSize: 'cover',
            backgroundPosition: 'center',
          }}
        ></div>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å–ª–∞–π–¥–µ—Ä–∞ */}
        <div className={`${CONTAINER_CLASSES} text-center z-10 max-w-5xl`}>
          <h1 className="text-4xl sm:text-5xl md:text-7xl font-extrabold mb-4 md:mb-6 leading-tight drop-shadow-2xl">
            {slide.title}
          </h1>
          <p className="text-lg md:text-2xl font-light mb-8 md:mb-12 opacity-90 drop-shadow-xl">
            {slide.subtitle}
          </p>
          <button className={CTA_BUTTON_CLASSES}>{slide.ctaText}</button>
        </div>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–æ—á–∫–∏ */}
        <div className="absolute bottom-6 left-1/2 transform -translate-x-1/2 flex space-x-3 z-10">
          {SLIDER_DATA.map((_, index) => (
            <button
              key={index}
              className={`w-3 h-3 rounded-full ${
                currentSlide === index ? 'bg-orange-500' : 'bg-white/50'
              } transition-all duration-300`}
              onClick={() => handleDotClick(index)}
            ></button>
          ))}
        </div>
      </section>

      {/* –ë–ª–æ–∫ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ */}
      <section className="py-16 bg-gray-100 text-gray-900">
        <div className={CONTAINER_CLASSES}>
          <h2 className="text-3xl md:text-4xl font-bold text-center mb-12">
            –ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {ADVANTAGES_DATA.map((advantage, index) => (
              <div
                key={index}
                className="bg-white p-6 rounded-lg shadow-lg text-center transform hover:scale-[1.02] transition duration-300"
              >
                <div className="text-4xl mb-4">{advantage.icon}</div>
                <h3 className="text-xl font-semibold mb-2">{advantage.title}</h3>
                <p className="text-gray-600">{advantage.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>
    </>
  );
};

export default SliderBanner;